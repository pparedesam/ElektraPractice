openapi: 3.0.1
info:
  title: Client API
  description: API para gestionar Clientes
  version: "1.0.0"
servers:
  - url: http://localhost:8080
    description: Servidor local

paths:
  /clients:
    get:
      summary: Listar Clientes
      description: Obtiene la lista de todos los clientes
      tags:
        - client-controller
      responses:
        '200':
          description: Lista de clientes obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListClient'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Registrar Cliente
      description: Realiza la creación de un cliente nuevo
      tags:
        - client-controller
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateDTO'
      responses:
        '200':
          description: Cliente registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseClient'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /clients/{id}:
    get:
      summary: Obtener Cliente por ID
      description: Obtiene un cliente por su ID
      tags:
        - client-controller
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID del cliente a buscar
      responses:
        '200':
          description: Cliente encontrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseClient'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Eliminar Cliente
      description: Elimina un cliente por su ID
      tags:
        - client-controller
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID del cliente a eliminar
      responses:
        '200':
          description: Cliente eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseVoid'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Paul Paredes"
        email:
          type: string
          example: "paul.paredesam@gmail.com"
        age:
          type: integer
          example: 30
        clientType:
          type: string
          enum:
            - REGULAR
            - VIP
          example: "REGULAR"

    ApiResponseClient:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2024-12-19T11:17:52'
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Cliente encontrado
        data:
          $ref: '#/components/schemas/Client'
        errors:
          type: array
          items:
            type: string

    ApiResponseListClient:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2024-12-19T11:17:52'
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Lista de clientes
        data:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        errors:
          type: array
          items:
            type: string

    ApiResponseVoid:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2024-12-19T11:17:52'
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Operación exitosa
        data:
          type: null
        errors:
          type: array
          items:
            type: string

    ClientCreateDTO:
      type: object
      properties:
        name:
          type: string
          example: "Paul Paredes"
        email:
          type: string
          example: "paul.paredesam@gmail.com"
        age:
          type: integer
          example: 30
        clientType:
          type: string
          enum:
            - REGULAR
            - VIP
          example: "REGULAR"

    ClientUpdateDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Paul Paredes"
        email:
          type: string
          example: "paul.paredesam@gmail.com"
        age:
          type: integer
          example: 35
        clientType:
          type: string
          enum:
            - REGULAR
            - VIP
          example: "VIP"

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2024-12-19T11:17:52'
        code:
          type: integer
          example: 500
        message:
          type: string
          example: Error interno del servidor
        errors:
          type: array
          items:
            type: string
